/*Задание 4.
Реализуйте следующее консольное приложение на прототипах.
Определите иерархию электроприборов. 
Включите некоторые в розетку. 
Посчитайте потребляемую мощность (передайте аргумент).
Таких приборов должно быть как минимум два (например, настольная лампа и компьютер).
 Выбрав прибор, подумайте, какими свойствами он обладает.

План:
Определите родительскую функцию с методами, которые включают/выключают прибор из розетки. 
Создайте делегирующую связь [[Prototype]] для двух конкретных приборов. 
У каждого из приборов должны быть собственные свойства и, желательно, методы, 
отличные от родительских методов. 
Создайте экземпляры каждого прибора. Выведите в консоль.

Общие требования:
Имена функций, свойств и методов должны быть информативными 
Соблюдайте best practices: использование camelCase нотации для переменных 
и методов, PascalCase для названия функций-конструкторов и классов; 
информативные имена (а не a, b); четкая связь между классом и его экземплярами.
 (класс описывает множество, а экземпляр — конкретную реализацию); 
 использование синтаксиса es6 (кроме функции-конструкторов) и так далее.
*/ 
"use strict";

function Electrical(watt, hourson) {
    this.watt = watt;
    this.hourson = hourson;
}  

Electrical.prototype.consumption = function() {
    console.log( `Consumption`, this.watt * this.hourson, `KW`)
}

Electrical.prototype.turnedOn = function() {
   console.log(`ON`)
}

Electrical.prototype.turnedOff = function() {
   console.log(`OFF`)
}

let pc = new Electrical("60", "8");
pc.model = "HP";
pc.size = "13 inc";
pc.disk = "256 GB";

let tv = new Electrical("180" , "12");
tv.model = "Samsung";
tv.size = "78 inc";
tv.resolution = "4k";

console.log(pc);
pc.turnedOn();
pc.consumption();

console.log(tv);
tv.turnedOn();
tv.consumption();